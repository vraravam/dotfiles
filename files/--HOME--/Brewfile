# file location: ${HOME}/Brewfile

# This file is used along with the `brew bundle` command to ensure that required packages and apps are installed.
# Also can be used to ensure that any package/apps that were installed as experimentation are uninstalled from the system.
# For a more detailed explanation of the philosophy/reasoning behind this file, please see https://openfolder.sh/macos-migrations-with-brewfile

# These are the common shell aliases that I have setup in the `${HOME}/.aliases` file for ease of running/typing (and also don't need to remember all these commands by-heart!). If you are using my `${HOME}/.aliases`, they will already be present for you. If not, you can then set these up in the respective dotfile of your choice
# alias bcg='brew outdated --greedy'  # List all casks that are outdated like a "dry-run" (and which have version marked as 'latest')
# alias bcug='brew upgrade --greedy'  # Upgrades all casks that are outdated (and which have version marked as 'latest')
# alias bupc='brew bundle check || brew bundle --all --cleanup; brew bundle cleanup -f; brew cleanup --prune=all; brew autoremove; brew upgrade'
# Upgrades and cleans up all regular outdated casks and libs (non-greedy)

# TODO: Need to find cask for:
#   Ghostty
#   Tinkertool
#   ZoomHider

# set global preferences for all 'brew install' commands
cask_args appdir: '/Applications', fontdir: '/Library/Fonts', no_quarantine: true, adopt: true

# java_present = system('/usr/libexec/java_home --failfast')
is_arm = Hardware::CPU.arm?

tap 'homebrew/services'
tap 'romkatv/powerlevel10k'

# formulae pulled in from homebrew to replace system equivalents to fix any security issues since the OS was released
brew 'bash'
brew 'curl'
brew 'git'
brew 'less'
brew 'vim'
brew 'wget'
brew 'zsh'

# formulae pulled in for base configs
brew 'diff-so-fancy'
brew 'direnv'
brew 'mise'
brew 'powerlevel10k'

# formulae pulled in for advanced configs (these are optional, but still recommended)
brew 'bat'
brew 'btop'
brew 'eza'
brew 'git-extras'
brew 'git-gui'
brew 'git-tools'
brew 'jq'
brew 'moreutils'
brew 'ncdu'
brew 'prettyping'
brew 'ripgrep'
brew 'syncthing'
brew 'tldr'

cask 'aldente'
cask 'appcleaner'
cask 'arc'
cask 'brave-browser'
cask 'clocker'
cask 'firefox@nightly' #, greedy: true
cask 'font-meslo-lg-nerd-font'
cask 'iterm2'
cask 'itsycal'
cask 'jordanbaird-ice'
cask 'keepassxc@beta'
cask 'keepingyouawake'
cask 'keybase'
cask 'keycastr'
cask 'libreoffice'
cask 'monolingual'
cask 'notunes'
cask 'ollama', restart_service: :changed
cask 'onyx'
cask 'protonvpn'
cask 'rancher'
cask 'raycast'
cask 'silicon' if is_arm
cask 'stats'
cask 'the-unarchiver'
cask 'vscodium@insiders'   # TODO: Doesn't handle 'Remote Containers' and GH-based auto-syncing when compared to VSCode
cask 'zen-browser@twilight'
cask 'zoom'

# VSCode extensions
# Note: I don't want brew to silently install VS Code (which is what it does currently if the following lines are present but it doesn't find code!)
is_vscode_installed = !`which code`.chomp.empty?
if is_vscode_installed
  # This is failing on different machines
  # vscode 'formulahendry.code-runner'
  # vscode 'nicolasvuillamy.vscode-groovy-lint'
  # vscode 'redhat.java'
  # vscode 'sonarsource.sonarlint-vscode'
  # vscode 'vscjava.vscode-java-debug'
  # vscode 'vscjava.vscode-java-pack'
  # vscode 'vscjava.vscode-java-test'
  # vscode 'vscjava.vscode-lombok'
  vscode 'brandonkirbyson.vscode-animations'
  vscode 'britesnow.vscode-toggle-quotes'
  vscode 'codezombiech.gitignore'
  vscode 'davidanson.vscode-markdownlint'
  vscode 'dbaeumer.vscode-eslint'
  vscode 'digitalbrainstem.javascript-ejs-support'
  vscode 'drcika.apc-extension'
  vscode 'eamodio.gitlens'
  vscode 'editorconfig.editorconfig'
  vscode 'esbenp.prettier-vscode'
  vscode 'genuitecllc.codetogether'
  vscode 'ibm.output-colorizer'
  vscode 'mechatroner.rainbow-csv'
  vscode 'mikestead.dotenv'
  vscode 'mkhl.direnv'
  vscode 'ms-azuretools.vscode-docker'
  vscode 'ms-vscode.vscode-typescript-next'
  vscode 'oderwat.indent-rainbow'
  vscode 'orta.vscode-jest'
  vscode 'rebornix.ruby'
  vscode 'redhat.vscode-yaml'
  vscode 'richie5um2.vscode-sort-json'
  vscode 'shan.code-settings-sync'
  vscode 'tchayen.markdown-links'
  vscode 'tyriar.sort-lines'
  vscode 'vscode-icons-team.vscode-icons'
  vscode 'wayou.vscode-todo-highlight'
  vscode 'wholroyd.jinja'
  vscode 'wingrunr21.vscode-ruby'
  vscode 'wmaurer.change-case'
  vscode 'yzhang.markdown-all-in-one'
end

# ----------------------------------------------------------------------------------------------------------
# TODO: This doesn't solve the issue about performing a custom action when a specific formula/cask is (re)installed
at_exit do
  # This removal is required for completions from other plugins to work (for eg git-extras)
  system("rm -rfv \"${HOMEBREW_REPOSITORY}/share/zsh/site-functions/_git\" &> /dev/null 2>&1 || true") || true
end

# ----------------------------------------------------------------------------------------------------------
# Moved these brew and cask lines to clean up the noise from the above alphabetically sorted lists

# ---- zen-browser development
# brew 'gnu-tar'

# ---- docker utilities
# brew 'dive'   # docker layers inspection on steroids
# brew 'docker-diff'
# brew 'docker-slim'  # TODO: investigate if the http-probe is a deal-breaker
# brew 'hadolint'     # lint Dockerfiles (similar to shellcheck for shell scripts)
# brew 'kubernetes-cli', link: true   # Note: Had to do this: rm /usr/local/bin/kubectl && brew link --overwrite kubernetes-cli
# brew 'kubernetes-helm'

# ---- git utilities
# brew 'git-crypt'

# ---- tmux utilities
# brew 'tmux'
# brew 'reattach-to-user-namespace' # Needed if using tmux (to be able to access the macos clipboard from within tmux)

# ---- general utilities
# brew 'fzy'
# brew 'gradle-completion'
# brew 'gs'   # used for compressing PDFs
# brew 'libressl', link: true
# brew 'localstack'
# brew 'shellcheck'
# brew 'speedtest-cli'
# brew 'watch'
# brew 'wifi-password'

# ---- casks
# cask 'cloudflare-warp'
# cask 'dbeaver-community'
# cask 'git-credential-manager'   # https://docs.github.com/en/get-started/getting-started-with-git/caching-your-github-credentials-in-git
# cask 'intellij-idea-ce'
# cask 'kdiff3'
# cask 'licecap'
# cask 'lulu'
# cask 'microsoft-remote-desktop'
# cask 'microsoft-teams'
# cask 'netspot'
# cask 'ngrok'
# cask 'tempbox'
# cask 'virtualbox'
